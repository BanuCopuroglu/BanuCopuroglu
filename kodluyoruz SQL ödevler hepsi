ÖDEV 1

-- Merhabalar,

-- Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

--film tablosunda bulunan title ve description sütunlarındaki verileri sıralayınız.
SELECT title,description FROM film;

--film tablosunda bulunan tüm sütunlardaki verileri film uzunluğu (length) 60 dan büyük VE 75 ten küçük olma koşullarıyla sıralayınız.
SELECT  * FROM film;
WHERE length > 60 AND length < 75

--film tablosunda bulunan tüm sütunlardaki verileri rental_rate 0.99 VE replacement_cost 12.99 VEYA 28.99 olma koşullarıyla sıralayınız.
SELECT * FROM film;
WHERE rental_rate = 0.99 AND replacement_cost = 12.99 or replacement_cost = 28.99

--customer tablosunda bulunan first_name sütunundaki değeri 'Mary' olan müşterinin last_name sütunundaki değeri nedir?
SELECT last_name FROM customer;
WHERE first_name = 'Mary' 

--film tablosundaki uzunluğu(length) 50 ten büyük OLMAYIP aynı zamanda rental_rate değeri 2.99 veya 4.99 OLMAYAN verileri sıralayınız.
SELECT * FROM film;
WHERE length < 50 and NOT rental_rate = 2.99 or rental_rate = 4.99
------------------------------------------------------------------------------------------------------------------------------------------------------

ÖDEV 2
-- Merhabalar,
-- Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

-- film tablosunda bulunan tüm sütunlardaki verileri replacement cost değeri 12.99 dan büyük eşit ve 16.99 küçük olma koşuluyla
sıralayınız ( BETWEEN - AND yapısını kullanınız.)
SELECT * FROM film;
WHERE replacement_cost BETWEEN 12.99 AND 16.99

-- 2. actor tablosunda bulunan first_name ve last_name sütunlardaki verileri first_name 'Penelope' veya 'Nick' veya 'Ed' değerleri olması
koşuluyla sıralayınız. ( IN operatörünü kullanınız.)
SELECT * FROM actor;
WHERE first_name, last_name IN 'Penelope' AND 'Nick' OR 'Ed'

-- 3. film tablosunda bulunan tüm sütunlardaki verileri rental_rate 0.99, 2.99, 4.99 VE replacement_cost 12.99, 15.99, 28.99 olma koşullarıyla sıralayınız.
(IN operatörünü kullanınız.)
SELECT * FROM film;
WHERE (rental_rate IN 0.99, 2.99, 4.99) AND (replacement_cost IN 12.99, 15.99, 28.99) 

------------------------------------------------------------------------------------------------------------------------------------------------------
--Ödev 3
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

--1. country tablosunda bulunan country sütunundaki ülke isimlerinden 'A' karakteri ile başlayıp 'a' karakteri ile sonlananları sıralayınız.
SELECT * FROM country
WHERE country LIKE 'A%a';
--2. country tablosunda bulunan country sütunundaki ülke isimlerinden en az 6 karakterden oluşan ve sonu 'n' karakteri ile sonlananları sıralayınız.
SELECT * FROM country
WHERE country LIKE '%n';
--3. film tablosunda bulunan title sütunundaki film isimlerinden en az 4 adet büyük ya da küçük harf farketmesizin 'T' karakteri içeren
film isimlerini sıralayınız.
SELECT * FROM film
WHERE title ~~* 'T%';
--4. film tablosunda bulunan tüm sütunlardaki verilerden title 'C' karakteri ile başlayan ve uzunluğu (length) 90 dan büyük olan ve rental_rate 2.99
olan verileri sıralayınız.
SELECT * FROM film
WHERE title ~~ 'C%' AND length>90 AND rental_rent = 2.99;
------------------------------------------------------------------------------------------------------------------------------------------------------

--Ödev 4
--Merhabalar,
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

--1. film tablosunda bulunan replacement_cost sütununda bulunan birbirinden farklı değerleri sıralayınız.
SELECT DISTINCT replacement_cost FROM film;

--2. film tablosunda bulunan replacement_cost sütununda birbirinden farklı kaç tane veri vardır?
SELECT COUNT(DISTINCT replacement_cost) FROM film;

--3. film tablosunda bulunan film isimlerinde (title) kaç tanesini T karakteri ile başlar ve aynı zamanda rating 'G' ye eşittir?
SELECT COUNT(*) FROM film
WHERE title LIKE T% AND rating = 'G';

--4. country tablosunda bulunan ülke isimlerinden (country) kaç tanesi 5 karakterden oluşmaktadır?
SELECT * FROM country
WHERE LEN(country) = 5;
--5. city tablosundaki şehir isimlerinin kaçtanesi 'R' veya r karakteri ile biter?
SELECT COUNT(*) FROM city
WHERE city ~~* 'R';

------------------------------------------------------------------------------------------------------------------------------------------------------
--Ödev 5
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

--1. film tablosunda bulunan ve film ismi (title) 'n' karakteri ile biten en uzun (length) 5 filmi sıralayınız.
SELECT * FROM film
WHERE title LIKE '%n' 
ORDER BY length
LIMIT 5;

--2. film tablosunda bulunan ve film ismi (title) 'n' karakteri ile biten en kısa (length) ikinci 5 filmi sıralayınız.
SELECT * FROM film
WHERE title LIKE '%n' 
ORDER BY length DESC
OFFSET 5
LIMIT 5;

--3. customer tablosunda bulunan last_name sütununa göre azalan yapılan sıralamada store_id 1 olmak koşuluyla ilk 4 veriyi sıralayınız.
SELECT * FROM customer 
WHERE last_name ORDER BY DESC store_id = 1 
LIMIT 4;
------------------------------------------------------------------------------------------------------------------------------------------------------

--Ödev 6
--Merhabalar,
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

-- 1. film tablosunda bulunan rental_rate sütunundaki değerlerin ortalaması nedir?
SELECT AVG(rental_rate) FROM film;

-- 2. film tablosunda bulunan filmlerden kaçtanesi 'C' karekteri ile başlar?
SELECT COUNT(*) FROM film
WHERE LIKE 'C%';

-- 3. film tablosunda bulunan filmlerden rental_rate değeri 0.99 a eşit olan en uzun (length) film kaç dakikadır?
SELECT MAX(length) FROM film
WHERE rental_rate LIKE 0.99;

-- 4. film tablosunda bulunan filmlerin uzunluğu 150 dakikadan büyük olanlarına ait kaç farklı replacement_cost değeri vardır?
SELECT  DISTINCT(COUNT(replacement_cost)) FROM film
WHERE length > 150;

------------------------------------------------------------------------------------------------------------------------------------------------------
--Ödev 7
--Merhabalar,
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

--1. film tablosunda bulunan filmleri rating değerlerine göre gruplayınız.
SELECT * FROM film
GROUP BY rating;

--2. film tablosunda bulunan filmleri replacement_cost sütununa göre grupladığımızda film sayısı 50 den fazla olan replacement_cost değerini
--ve karşılık gelen film sayısını sıralayınız.
SELECT COUNT(*) FROM film
GROUP BY replacement_cost
HAVING replacement_cost > 50;

--3. customer tablosunda bulunan store_id değerlerine karşılık gelen müşteri sayılarını nelerdir?
SELECT COUNT(*) FROM customer
GROUP BY store_id;

--4. city tablosunda bulunan şehir verilerini country_id sütununa göre gruplandırdıktan sonra en fazla şehir sayısı barındıra country_id bilgisini
ve şehir sayısını paylaşınız.
SELECT * FROM city
GROUP BY country_id
HAVING MAX(country_id);

------------------------------------------------------------------------------------------------------------------------------------------------------
--Ödev 8

--1.test veritabanınızda employee isimli sütun bilgileri id(INTEGER), name VARCHAR(50), 
--birthday DATE, email VARCHAR(100) olan bir tablo oluşturalım.
CREATE TABLE employee (
  id INTEGER PRIMARY KEY,
  name VARCHAR(50),
  birthday DATE,
  email VARCHAR(100)
  );
  
--2-Oluşturduğumuz employee tablosuna 'Mockaroo' servisini kullanarak 50 adet veri ekleyelim.
insert into MOCK_DATA (id, name, birthday, email) values (1, 'Kirk', '1997-11-17', 'kmcaughtry0@java.com');
insert into MOCK_DATA (id, name, birthday, email) values (2, 'Gran', '1989-02-11', 'ggoch1@instagram.com');
insert into MOCK_DATA (id, name, birthday, email) values (3, 'Rodolphe', '1988-09-15', 'rburchatt2@geocities.com');
insert into MOCK_DATA (id, name, birthday, email) values (4, 'Jayson', '1985-09-10', 'jwitherby3@uol.com.br');
insert into MOCK_DATA (id, name, birthday, email) values (5, 'Althea', '1982-05-19', 'agoodspeed4@patch.com');
insert into MOCK_DATA (id, name, birthday, email) values (6, 'Osbourn', '1981-04-22', 'ogarratty5@lulu.com');
insert into MOCK_DATA (id, name, birthday, email) values (7, 'Jerri', '2005-02-19', 'jshakshaft6@google.ru');
insert into MOCK_DATA (id, name, birthday, email) values (8, 'Grethel', '2002-09-04', 'gold7@time.com');
insert into MOCK_DATA (id, name, birthday, email) values (9, 'Laurie', '2009-10-29', 'lgruszka8@omniture.com');
insert into MOCK_DATA (id, name, birthday, email) values (10, 'Lucilia', '1991-05-19', 'lstonehouse9@si.edu');
insert into MOCK_DATA (id, name, birthday, email) values (11, 'Ugo', '1991-01-12', 'umcneicea@independent.co.uk');
insert into MOCK_DATA (id, name, birthday, email) values (12, 'Lorie', '1981-07-27', 'lllewelynb@cornell.edu');
insert into MOCK_DATA (id, name, birthday, email) values (13, 'Marris', '1984-03-03', 'mcorstonc@ocn.ne.jp');
insert into MOCK_DATA (id, name, birthday, email) values (14, 'Viviene', '2001-05-28', 'vmcelroyd@fc2.com');
insert into MOCK_DATA (id, name, birthday, email) values (15, 'Homerus', '2003-12-18', 'hcockrene@europa.eu');
insert into MOCK_DATA (id, name, birthday, email) values (16, 'Karoline', '2004-06-30', 'kmarjanovicf@wp.com');
insert into MOCK_DATA (id, name, birthday, email) values (17, 'Cart', '1978-03-05', 'ckumaarg@eventbrite.com');
insert into MOCK_DATA (id, name, birthday, email) values (18, 'Mitzi', '1979-04-25', 'mpantlingh@tripod.com');
insert into MOCK_DATA (id, name, birthday, email) values (19, 'Aliza', '1983-10-30', 'adrysdelli@techcrunch.com');
insert into MOCK_DATA (id, name, birthday, email) values (20, 'Taryn', '1980-08-03', 'tnormavellj@unicef.org');
insert into MOCK_DATA (id, name, birthday, email) values (21, 'Addi', '1987-10-13', 'acotterk@taobao.com');
insert into MOCK_DATA (id, name, birthday, email) values (22, 'Sunny', '1990-07-27', 'sgiacobol@feedburner.com');
insert into MOCK_DATA (id, name, birthday, email) values (23, 'Chane', '1972-08-20', 'cfitzsymondsm@ebay.co.uk');
insert into MOCK_DATA (id, name, birthday, email) values (24, 'Tobey', '1981-04-29', 'tklosn@studiopress.com');
insert into MOCK_DATA (id, name, birthday, email) values (25, 'Montgomery', '1986-01-30', 'msleightholmeo@smh.com.au');
insert into MOCK_DATA (id, name, birthday, email) values (26, 'Sondra', '1975-08-05', 'sdeclerqp@yandex.ru');
insert into MOCK_DATA (id, name, birthday, email) values (27, 'Lloyd', '1967-04-19', 'lgarroldq@yelp.com');
insert into MOCK_DATA (id, name, birthday, email) values (28, 'Kermit', '1961-09-23', 'kkeetleyr@a8.net');
insert into MOCK_DATA (id, name, birthday, email) values (29, 'Eddy', '2008-04-09', 'eciabatteris@wired.com');
insert into MOCK_DATA (id, name, birthday, email) values (30, 'Natassia', '1981-02-11', 'nlowmasst@hatena.ne.jp');
insert into MOCK_DATA (id, name, birthday, email) values (31, 'Carolan', '1972-01-30', 'cgatesmanu@usda.gov');
insert into MOCK_DATA (id, name, birthday, email) values (32, 'Homerus', '1969-03-26', 'hliepmannv@arizona.edu');
insert into MOCK_DATA (id, name, birthday, email) values (33, 'Clarey', '2000-06-05', 'cbausw@baidu.com');
insert into MOCK_DATA (id, name, birthday, email) values (34, 'Robinia', '1975-10-10', 'rpallaschx@github.com');
insert into MOCK_DATA (id, name, birthday, email) values (35, 'Carma', '1970-01-10', 'cglanfieldy@meetup.com');
insert into MOCK_DATA (id, name, birthday, email) values (36, 'Tomasine', '2007-11-07', 'tcapstickz@g.co');
insert into MOCK_DATA (id, name, birthday, email) values (37, 'Daryn', '1988-04-12', 'dswitland10@time.com');
insert into MOCK_DATA (id, name, birthday, email) values (38, 'Corrine', '1969-11-06', 'cberthel11@un.org');
insert into MOCK_DATA (id, name, birthday, email) values (39, 'Noelle', '1995-06-25', 'nmatzaitis12@delicious.com');
insert into MOCK_DATA (id, name, birthday, email) values (40, 'Calli', '1981-09-19', 'cokerin13@indiatimes.com');
insert into MOCK_DATA (id, name, birthday, email) values (41, 'Staffard', '1976-03-13', 'sthynn14@google.it');
insert into MOCK_DATA (id, name, birthday, email) values (42, 'Bliss', '1997-04-26', 'bkaesmans15@newyorker.com');
insert into MOCK_DATA (id, name, birthday, email) values (43, 'Leanor', '1976-07-11', 'lbrunke16@usatoday.com');
insert into MOCK_DATA (id, name, birthday, email) values (44, 'Isidoro', '1964-02-21', 'ifarrants17@altervista.org');
insert into MOCK_DATA (id, name, birthday, email) values (45, 'Perkin', '2001-11-03', 'pkenderdine18@youtube.com');
insert into MOCK_DATA (id, name, birthday, email) values (46, 'Annabal', '1979-02-01', 'astancliffe19@google.it');
insert into MOCK_DATA (id, name, birthday, email) values (47, 'Melli', '1982-09-12', 'mbewley1a@digg.com');
insert into MOCK_DATA (id, name, birthday, email) values (48, 'Nappie', '2010-03-08', 'nitzkovwich1b@cocolog-nifty.com');
insert into MOCK_DATA (id, name, birthday, email) values (49, 'Lenore', '1978-05-15', 'lfeuell1c@google.com.au');
insert into MOCK_DATA (id, name, birthday, email) values (50, 'Kalil', '1978-04-27', 'kkilminster1d@washington.edu');

--3.Sütunların her birine göre diğer sütunları güncelleyecek 5 adet UPDATE işlemi yapalım.
UPDATE employee
SET name = 'Annabal', 
WHERE id = 2;
SET name = 'XXX'
WHERE id = 5;
SET email = 'Melli@gmail.com'
WHERE id = 47;
SET birthday = '2000.01.09'
WHERE name = 'Homerus'
SET email = 'Eddy@google.com'
WHERE name = 'Eddy'

--4.Sütunların her birine göre ilgili satırı silecek 5 adet DELETE işlemi yapalım.
DELETE FROM employee
WHERE id = 30;
DELETE FROM employee
WHERE id = 20;
DELETE FROM employee
WHERE id = 12;
DELETE FROM employee
WHERE name = 'Kirk';
DELETE FROM employee
WHERE name = 'Jerri';
------------------------------------------------------------------------------------------------------------------------------------------------------
--Ödev 9
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

--1.city tablosu ile country tablosunda bulunan şehir (city) ve ülke (country) isimlerini 
--birlikte görebileceğimiz INNER JOIN sorgusunu yazınız.

SELECT city.city, country.country, country_id FROM city
INNER JOIN country ON country_id = city.country_id;

--2.customer tablosu ile payment tablosunda bulunan payment_id ile customer tablosundaki first_name ve last_name 
--isimlerini birlikte görebileceğimiz INNER JOIN sorgusunu yazınız.

SELECT first_name, last_name, payment_id FROM customer
INNER JOIN payment ON payment_id = customer.customer_id;

--3. customer tablosu ile rental tablosunda bulunan rental_id ile customer tablosundaki first_name ve last_name 
--isimlerini birlikte görebileceğimiz INNER JOIN sorgusunu yazınız.

SELECT rental_id, first_name, last_name FROM rental
INNER JOIN customer ON customer_id = rental.rental_id;

------------------------------------------------------------------------------------------------------------------------------------------------------

--Ödev 10
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

--1. city tablosu ile country tablosunda bulunan şehir (city) ve ülke (country) isimlerini birlikte 
--görebileceğimiz LEFT JOIN sorgusunu yazınız.

SELECT city, country, city_id FROM country
LEFT JOIN city ON city_id = country.country_id;

--2. customer tablosu ile payment tablosunda bulunan payment_id ile customer tablosundaki first_name 
--ve last_name isimlerini birlikte görebileceğimiz RIGHT JOIN sorgusunu yazınız.

SELECT first_name, last_name, payment_id FROM customer
RIGHT JOIN payment ON payment_id = customer.customer_id;

--3. customer tablosu ile rental tablosunda bulunan rental_id ile customer tablosundaki first_name ve 
--last_name isimlerini birlikte görebileceğimiz FULL JOIN sorgusunu yazınız.

SELECT rental_id, first_name, last_name FROM rental
FULL JOIN customer ON customer_id = rental.rental_id;

--3. customer tablosu ile rental tablosunda bulunan rental_id ile customer tablosundaki first_name ve 
--last_name isimlerini birlikte görebileceğimiz FULL JOIN sorgusunu yazınız.
------------------------------------------------------------------------------------------------------------------------------------------------------
--Ödev 11
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

-- 1. actor ve customer tablolarında bulunan first_name sütunları için tüm verileri sıralayalım.
(SELECT first_name FROM actor;
)
(
UNION
)
(SELECT first_name FROM customer);

-- 2. actor ve customer tablolarında bulunan first_name sütunları için kesişen verileri sıralayalım.
(SELECT first_name FROM actor;
)
(
INTERSECT
)
(SELECT first_name FROM customer);

-- 3. actor ve customer tablolarında bulunan first_name sütunları için ilk tabloda bulunan ancak 
-- ikinci tabloda bulunmayan verileri sıralayalım.

(SELECT first_name FROM actor;
)
(
EXCEPT
)
(SELECT first_name FROM customer);

--İlk 3 sorguyu tekrar eden veriler için de yapalım.
(SELECT first_name FROM actor;
)
(
INTERSECT ALL
)
(SELECT first_name FROM customer);

------------------------------------------------------------------------------------------------------------------------------------------------------
--Ödev 12
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

--1. film tablosunda film uzunluğu length sütununda gösterilmektedir. Uzunluğu ortalama film uzunluğundan 
--fazla kaç tane film vardır?

SELECT Count(length) AS amount_of_film FROM film
WHERE length > 
(SELECT AVG(length) FROM film
)
 
--2. film tablosunda en yüksek rental_rate değerine sahip kaç tane film vardır?

SELECT Count(rental_rate) AS rental_max FROM film
WHERE rental_rate = 
(SELECT MAX(rental_rate) FROM film
)

--3. film tablosunda en düşük rental_rate ve en düşük replacement_cost değerlerine sahip filmleri sıralayınız.

SELECT Count(rental_rate) AS rental_min FROM film
WHERE rental_rate = 
(SELECT MIN(rental_rate) FROM film
)
(
UNION
)
SELECT Count(replacement_cost) AS cost_min FROM film
WHERE replacement_cost = 
(SELECT MIN(replacement_cost) FROM film
)

--4. payment tablosunda en fazla sayıda alışveriş yapan müşterileri(customer) sıralayınız.
SELECT Count(customer) AS customer_max FROM payment
WHERE amount = 
(SELECT MAX(amount) FROM payment
)

